using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Class_Client;
using System.Windows.Forms;

namespace Gimbal_Camera_Control.Forms
{
    public partial class FormImage : Form
    {

        Client_Class client_Class;

        public int zoomLevel1 = 10;
        public byte[] zoomin = new byte[] { 0x81, 0x01, 0x04, 0x07, 0x27, 0xFF };
        public byte[] zoomout = new byte[] { 0x81, 0x01, 0x04, 0x07, 0x37, 0xFF };

        public byte[] zoomfocstop = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x6E };

        public byte[] zoom1P= new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x48, 0x00, 0x00, 0x00, 0x64 };
        public byte[] zoom1N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x24 };

        public byte[] zoom2P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x7C };
        public byte[] zoom2N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x00, 0x3C };

        public byte[] zoom3P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x58, 0x00, 0x00, 0x00, 0x74 };
        public byte[] zoom3N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x18, 0x00, 0x00, 0x00, 0x34 };

        public byte[] zoom4P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x4C };
        public byte[] zoom4N= new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x0C };

        public byte[] zoom5P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x68, 0x00, 0x00, 0x00, 0x44 };
        public byte[] zoom5N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x28, 0x00, 0x00, 0x00, 0x04 };

        public byte[] zoom6P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x70, 0x00, 0x00, 0x00, 0x5C };
        public byte[] zoom6N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x30, 0x00, 0x00, 0x00, 0x1C };

        public byte[] zoom7P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x78, 0x00, 0x00, 0x00, 0x54 };
        public byte[] zoom7N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0x00, 0x00, 0x00, 0x14 };

        public byte[] focusin = new byte[] { 0x81, 0x01, 0x04, 0x08, 0x27, 0xFF };
        public byte[] focusout = new byte[] { 0x81, 0x01, 0x04, 0x08, 0x37, 0xFF };
        public byte[] startrecord = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x10, 0x00, 0x00, 0x00, 0x3B}; //start record
        public byte[] stoprecord = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x50, 0x00, 0x00, 0x00, 0x7B }; //stop record
        public byte[] pipon = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0x00, 0x00, 0x00, 0xAE};      
        public byte[] pipoff = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x81, 0x00, 0x00, 0x00, 0xAC };

        public byte[] visible = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x81, 0x00, 0x00, 0x00, 0xAC };
        
        public byte[] ir = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x82, 0x00, 0x00, 0x00, 0xAF};
        

        public byte[] manualfocon = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x90, 0x00, 0x00, 0x00, 0xB8 };
        public byte[] manualfocoff = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x50, 0x00, 0x00, 0x00, 0x78 };

        public byte[] foc1P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xC8, 0x00, 0x00, 0x00, 0xE4 };
        public byte[] foc1N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x88, 0x00, 0x00, 0x00, 0xA4 };

        public byte[] foc2P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xD0, 0x00, 0x00, 0x00, 0xFC };
        public byte[] foc2N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x90, 0x00, 0x00, 0x00, 0xBC };

        public byte[] foc3P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xD8, 0x00, 0x00, 0x00, 0xF4 };
        public byte[] foc3N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x98, 0x00, 0x00, 0x00, 0xB4 };

        public byte[] foc4P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xE0, 0x00, 0x00, 0x00, 0xCC };
        public byte[] foc4N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xA0, 0x00, 0x00, 0x00, 0x8C };

        public byte[] foc5P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xE8, 0x00, 0x00, 0x00, 0xC4 };
        public byte[] foc5N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xA8, 0x00, 0x00, 0x00, 0x84 };

        public byte[] foc6P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xF0, 0x00, 0x00, 0x00, 0xDC };
        public byte[] foc6N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xB0, 0x00, 0x00, 0x00, 0x9C };

        public byte[] foc7P = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xF8, 0x00, 0x00, 0x00, 0xD4 };
        public byte[] foc7N = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xB8, 0x00, 0x00, 0x00, 0x94 };


        public byte[] takepicture = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xD0, 0x00, 0x00, 0x00, 0xFA };
        public byte[] whitehot = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x81, 0x00, 0x00, 0x00, 0xAC };
        public byte[] blackhot = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC2, 0x00, 0x00, 0x00, 0xEF };
        public byte[] pseudohot = new byte[] { 0x55, 0xAA, 0xDC, 0x11, 0x30, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x82, 0x00, 0x00, 0x00, 0xA8 };
        

        //public byte[] zoom1 = new byte[] { 0x7E, 0x7E, 0x44, 0x00, 0x00, 0x7D, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E };
        //public byte[] zoom2 = new byte[] { 0x7E, 0x7E, 0x44, 0x00, 0x00, 0x7D, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F };
        //public byte[] zoom3 = new byte[] { 0x7E, 0x7E, 0x44, 0x00, 0x00, 0x7D, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40 };
        //public byte[] zoom4 = new byte[] { 0x7E, 0x7E, 0x44, 0x00, 0x00, 0x7D, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41 };

        byte[] header = new byte[2] { 0xEB, 0x90 };
        public FormImage()
        {
            InitializeComponent();
            LoadTheme();
        }
        private void FormImage_Load(object sender, EventArgs e)
        {
            LoadTheme();
            client_Class = new Client_Class();
          
            numericUpDownZOOM.Minimum = 1;
            numericUpDownZOOM.Maximum = 9;

            numericZ.Minimum = 1;
            numericZ.Maximum = 7;

            numericF.Minimum = 1;
            numericF.Maximum = 7;

        }
            private void LoadTheme()
            {
                lblZoom.ForeColor = ThemeColor.SecondaryColor;
                lblFocus.ForeColor = ThemeColor.PrimaryColor;
                lblManualFocus.ForeColor = ThemeColor.PrimaryColor;
                lblGrid.ForeColor = ThemeColor.PrimaryColor;
                lblImage.ForeColor = ThemeColor.PrimaryColor;
        }
        private void btnZoomin_Click(object sender, EventArgs e)
        {
            if (numericZ.Value == 1)
            {
                client_Class.SendMessage(zoom1P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 2)
            {
                client_Class.SendMessage(zoom2P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 3)
            {
                client_Class.SendMessage(zoom3P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 4)
            {
                client_Class.SendMessage(zoom4P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 5)
            {
                client_Class.SendMessage(zoom5P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 6)
            {
                client_Class.SendMessage(zoom6P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 7)
            {
                client_Class.SendMessage(zoom7P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
        }

        private void btnZoomout_Click(object sender, EventArgs e)
        {
            if (numericZ.Value == 1)
            {
                client_Class.SendMessage(zoom1N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 2)
            {
                client_Class.SendMessage(zoom2N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 3)
            {
                client_Class.SendMessage(zoom3N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 4)
            {
                client_Class.SendMessage(zoom4N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 5)
            {
                client_Class.SendMessage(zoom5N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 6)
            {
                client_Class.SendMessage(zoom6N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericZ.Value == 7)
            {
                client_Class.SendMessage(zoom7N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
        }

        private void btnStartRecord_Click(object sender, EventArgs e)
        {
            client_Class.SendMessage(startrecord, header);
        }

        private void btnStopRecord_Click(object sender, EventArgs e)
        {
            client_Class.SendMessage(stoprecord, header);
        }

        private void checkBoxPip_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxPip.Checked == true)
            {
                client_Class.SendMessage(pipon, header);
            }
            else{

                client_Class.SendMessage(pipoff, header);
            }
        }
        private void comboBoxImage_SelectedIndexChanged(object sender, EventArgs e)
        {
            if(comboBoxImage.Text == "Visible")
            {
                client_Class.SendMessage(visible, header);
            }
            else if (comboBoxImage.Text == "IR")
            {
                client_Class.SendMessage(ir, header);
            }
        }
        private void comboBoxColor_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBoxColor.Text == "White Hot")
            {
                client_Class.SendMessage(whitehot, header);
            }
            else if (comboBoxColor.Text == "Black Hot")
            {
                client_Class.SendMessage(blackhot, header);
            }
            else if (comboBoxColor.Text == "Pseudo Color")
            {
                client_Class.SendMessage(pseudohot, header);
            }
        }
        public Graphics g1;
        private void checkBoxGrid_CheckedChanged(object sender, EventArgs e)
        {
            //if (checkBoxGrid.Checked == true)
            //{
            //    VLC.Image = new Bitmap(500, 500);
            //    g1 = Graphics.FromImage(this.VLC.Image);
            //    Pen gridPen = new Pen(Color.Black, 2);
            //    g1.DrawLine(gridPen, 0, 0, 100, 100);
            //}
        
            //if (checkBoxGrid.Checked == true)
            //{
            //    client_Class.SendMessage(gridon, header);
            //}
            //else (checkBoxGrid.Checked == false)
            //{

            //    client_Class.SendMessage(gridoff, header);
            //}
        }
        private void checkBoxManualFoc_CheckedChanged(object sender, EventArgs e)
        {
            
            if(checkBoxManualFoc.Checked == false)
            {
                btnfocusIn.Enabled = false;
                btnFocusOut.Enabled = false;
                client_Class.SendMessage(manualfocoff, header);
            }
            else if(checkBoxManualFoc.Checked == true)
            {
                btnfocusIn.Enabled = true;
                btnFocusOut.Enabled = true;
                client_Class.SendMessage(manualfocon, header);
            }
        }
        private void takephoto_Click(object sender, EventArgs e)
        {
            client_Class.SendMessage(takepicture, header);
        }

        private void btnfocusIn_Click(object sender, EventArgs e)
        {
            if (numericF.Value == 1)
            {
                client_Class.SendMessage(foc1P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 2)
            {
                client_Class.SendMessage(foc2P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 3)
            {
                client_Class.SendMessage(foc3P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 4)
            {
                client_Class.SendMessage(foc4P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 5)
            {
                client_Class.SendMessage(foc5P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 6)
            {
                client_Class.SendMessage(foc6P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 7)
            {
                client_Class.SendMessage(foc7P, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
        }

        private void btnFocusOut_Click(object sender, EventArgs e)
        {
            if (numericF.Value == 1)
            {
                client_Class.SendMessage(foc1N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 2)
            {
                client_Class.SendMessage(foc2N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 3)
            {
                client_Class.SendMessage(foc3N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 4)
            {
                client_Class.SendMessage(foc4N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 5)
            {
                client_Class.SendMessage(foc5N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 6)
            {
                client_Class.SendMessage(foc6N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
            else if (numericF.Value == 7)
            {
                client_Class.SendMessage(foc7N, header);
                client_Class.SendMessage(zoomfocstop, header);
            }
        }


        private void btnZoomTO_Click_1(object sender, EventArgs e)
        {
            if (numericUpDownZOOM.Value == 1)
            {
                client_Class.sendZoomPackage(1);
            }
            else if (numericUpDownZOOM.Value == 2)
            {
                client_Class.sendZoomPackage(2);
            }
            else if (numericUpDownZOOM.Value == 3)
            {
                client_Class.sendZoomPackage(3);
            }
            else if (numericUpDownZOOM.Value == 4)
            {
                client_Class.sendZoomPackage(4);
            }
            else if (numericUpDownZOOM.Value == 5) 
            {
                client_Class.sendZoomPackage(5);
            }
            else if (numericUpDownZOOM.Value == 6)
            {
                client_Class.sendZoomPackage(6);
            }
            else if(numericUpDownZOOM.Value ==7)
            {
                client_Class.sendZoomPackage(7);
            }
            else if(numericUpDownZOOM.Value ==8)
            {
                client_Class.sendZoomPackage(8);
            }
            else if(numericUpDownZOOM.Value ==9)
            {
                client_Class.sendZoomPackage(9);
            }
        }

    }
    }
    
    

